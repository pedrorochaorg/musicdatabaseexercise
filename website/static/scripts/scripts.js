"use strict";var apiUrl="https://musicdatabaseexercise.herokuapp.com/api";angular.module("websitedevApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/users.html",controller:"UsersCtrl",controllerAs:"users"}).when("/detail/:userId",{templateUrl:"views/userDetails.html",controller:"UserDetailCtrl",controllerAs:"userDetails"}).otherwise({redirectTo:"/"})}]),angular.module("websitedevApp").controller("UsersCtrl",["APIData","$scope",function(a,b){function c(){a.getUsers().then(function(a){b.users=a},function(a){console.log(a)})}function d(){a.getMusics().then(function(a){b.musics=a,b.selectedSong=b.musics[0].pk},function(a){console.log(a)})}b.users=[],b.user={pk:null,username:"",email:"",musics:[]},b.userToDelete=null,b.musics=[],b.selectedMusic={album:null,track:null,artist:null},b.selectedSong=null,b.submitForm=function(d){b.user=d,null==d.pk||void 0==d.pk||-1==d.pk?(console.log("Create"),a.createUser({username:d.username,email:d.email,musics:d.musics}).then(function(a){c(),b.resetForm()},function(a){console.log(a)})):a.updateUser({username:d.username,email:d.email,pk:d.pk,musics:d.musics}).then(function(a){c(),b.resetForm()},function(a){console.log(a)})},b.editUser=function(c){a.getUser(c.pk).then(function(a){b.user=a},function(a){console.log(a)})},b.deleteUser=function(d){console.log("delete user",d),a.deleteUser(d.pk).then(function(a){console.log(a),c(),b.resetForm()},function(a){console.log(a)})},b.prepareUserDeletion=function(a){b.userToDelete=a},b.addSong=function(a){b.user.musics.push(parseInt(a))},b.deleteUserSong=function(a,c){console.log("Delete User Song",a,c);var d=b.user.musics.indexOf(a);-1!=d&&b.user.musics.splice(d,1),console.log(b.user)},b.resetForm=function(){b.user.username="",b.user.email="",b.user.pk=-1,b.user.musics=[],b.selectedSong=b.musics[0].pk},c(),d()}]),angular.module("websitedevApp").controller("UserDetailCtrl",function(){}),angular.module("websitedevApp").service("APIData",["$http","$q",function(a,b){return{getMusics:function(){return a.get(apiUrl+"/musics/").then(function(a){return"object"==typeof a.data?a.data:b.reject(a.data)},function(a){return b.reject(a.data)})},getUsers:function(){return a.get(apiUrl+"/users/").then(function(a){return"object"==typeof a.data?a.data:b.reject(a.data)},function(a){return b.reject(a.data)})},getUser:function(c){return a.get(apiUrl+"/users/"+c+"/").then(function(a){return"object"==typeof a.data?a.data:b.reject(a.data)},function(a){return b.reject(a.data)})},createUser:function(c){return a.post(apiUrl+"/users/",c).then(function(a){return"object"==typeof a.data?a.data:b.reject(a.data)},function(a){return b.reject(a.data)})},updateUser:function(c){return a.put(apiUrl+"/users/"+c.pk+"/",c).then(function(a){return"object"==typeof a.data?a.data:b.reject(a.data)},function(a){return b.reject(a.data)})},deleteUser:function(c){return a["delete"](apiUrl+"/users/"+c+"/").then(function(a){return console.log(a),204===a.status?!0:b.reject(a.data)},function(a){return b.reject(a.data)})}}}]),angular.module("websitedevApp").filter("MusicFilter",function(){return function(a,b){var c=[];if(console.log(b),b.length>0)for(var d=0;d<a.length;d++){var e=a[d];-1!=b.indexOf(e.pk)&&c.push(e)}return c}}),angular.module("websitedevApp").filter("ArtistUniqueFilter",function(){return function(a){for(var b=[],c=[],d=0;d<a.length;d++){var e=a[d];b.search(e.artist)||(b.push(e.artist),c.push(e))}return c}}),angular.module("websitedevApp").filter("MusicSelectionFilter",function(){return function(a,b){var c=[];if(console.log(b),b.length>0)for(var d=0;d<a.length;d++){var e=a[d];-1==b.indexOf(e.pk)&&c.push(e)}else c=a;return c}}),angular.module("websitedevApp").run(["$templateCache",function(a){a.put("views/userDetails.html",'<div class="row"> <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"> </div> </div>'),a.put("views/users.html",'<div class="row"> <div class="col-lg-8 col-md-6 col-sm-12 col-xs-12"> <div class="panel panel-default"> <div class="panel-heading">Users</div> <div class="panel-body"> <div class="table-responsive"> <table class="table"> <thead> <tr> <th>Username</th> <th>Email</th> <th>Musics</th> <th>Options</th> </tr> </thead> <tbody> <tr data-ng-repeat="item in users"> <td>{{ item.username }}</td> <td>{{ item.email }}</td> <td>{{ item.musics }}</td> <td> <button type="button" class="btn btn-primary btn-xs" data-ng-click="editUser(item)"><span class="glyphicon glyphicon-pencil"></span> Edit</button> <button type="button" class="btn btn-danger btn-xs" data-ng-click="prepareUserDeletion(item)" data-toggle="modal" data-target="#myModal"><span class="glyphicon glyphicon-trash"></span> Delete</button> </td> </tr> </tbody> </table> </div> </div> </div> </div> <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12"> <div class="panel panel-default"> <div class="panel-heading">User Details</div> <div class="panel-body"> <form novalidate> <div class="form-group"> <label for="username">Username</label> <input type="text" name="username" class="form-control" id="username" data-ng-model="user.username" placeholder="Username"> </div> <div class="form-group"> <label for="email">Email</label> <input type="email" class="form-control" id="email" data-ng-model="user.email" placeholder="Email"> </div> <div class="panel panel-default"> <div class="panel-heading">Musics</div> <div class="panel-body"> <div class="row"> <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"> <div class="table-responsive"> <table class="table"> <thead> <tr> <th>Artist</th> <th>Album</th> <th>Track</th> <th>Options</th> </tr> </thead> <tbody> <tr data-ng-repeat="item in musics | MusicFilter:user.musics"> <td>{{ item.artist }}</td> <td>{{ item.album }}</td> <td>{{ item.track }}</td> <td> <button type="button" class="btn btn-danger btn-xs" data-ng-click="deleteUserSong(item.pk,user)"><span class="glyphicon glyphicon-trash"></span> Delete</button> </td> </tr> </tbody> </table> </div> </div> </div> <div class="row"> <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"> <h6> Add Song</h6> </div> <div class="col-lg-10 col-md-10 col-sm-10 col-xs-10"> <select name="song" id="song" class="form-control" data-ng-model="selectedSong"> <option data-ng-repeat="item in musics | MusicSelectionFilter:user.musics" value="{{ item.pk }}" ng-selected="{{ item.pk == selecetdSong }}">{{ (item.artist + \' - \' + item.track + \'( \' + item.album + \' )\') }}</option> </select> </div> <div class="col-lg-2 col-md-2 col-sm-2 col-xs-2"> <button type="button" data-ng-click="addSong(selectedSong)" class="btn btn-primary"><span class="glyphicon glyphicon-plus"></span></button> </div> </div> </div> </div> <input type="hidden" name="pk" id="pk" data-ng-model="user.pk"> <input type="hidden" name="musics" id="musics" data-ng-model="user.musics"> <div class="row"> <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"> <button type="submit" data-ng-click="submitForm(user)" class="btn btn-primary">Save</button> <button type="button" data-ng-click="resetForm()" class="btn btn-danger">Cancel</button> </div> </div> </form> </div> </div> </div> </div> <!-- Modal --> <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"> <div class="modal-dialog" role="document"> <div class="modal-content"> <div class="modal-header"> <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button> <h4 class="modal-title" id="myModalLabel">Modal title</h4> </div> <div class="modal-body"> ... </div> <div class="modal-footer"> <button type="button" class="btn btn-danger" data-ng-click="deleteUser(userToDelete)" data-dismiss="modal">Delete</button> <button type="button" class="btn btn-primary" data-dismiss="modal">Cancel</button> </div> </div> </div> </div>')}]);