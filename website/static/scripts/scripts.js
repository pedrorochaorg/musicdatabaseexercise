"use strict";var apiUrl="http://127.0.0.1:8000/api";angular.module("MusicDatabaseApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/musics.html",controller:"MusicsCtrl",controllerAs:"musics",name:"Musics"}).when("/users",{templateUrl:"views/users.html",controller:"UsersCtrl",controllerAs:"users",name:"Users"}).otherwise({redirectTo:"/"})}]),angular.module("MusicDatabaseApp").controller("UsersCtrl",["APIData","$scope","$anchorScroll",function(a,b,c){function d(){a.getUsers().then(function(a){b.users=a},function(a){console.log(a)})}function e(){a.getMusics().then(function(a){b.musics=a,b.selectedSong=b.musics[0].pk},function(a){console.log(a)})}b.users=[],b.user={pk:null,username:"",email:"",musics:[]},b.userToDelete=null,b.musics=[],b.selectedMusic={album:null,track:null,artist:null},b.selectedSong=null,b.submitForm=function(c){b.user=c,null==c.pk||void 0==c.pk||-1==c.pk?(console.log("Create"),a.createUser({username:c.username,email:c.email,musics:c.musics}).then(function(a){d(),b.resetForm()},function(a){console.log(a)})):a.updateUser({username:c.username,email:c.email,pk:c.pk,musics:c.musics}).then(function(a){d(),b.resetForm()},function(a){console.log(a)})},b.editUser=function(d){a.getUser(d.pk).then(function(a){c(),b.user=a},function(a){console.log(a)})},b.deleteUser=function(c){console.log("delete user",c),a.deleteUser(c.pk).then(function(a){console.log(a),d(),b.resetForm()},function(a){console.log(a)})},b.prepareUserDeletion=function(a){b.userToDelete=a},b.addSong=function(a){b.user.musics.push(parseInt(a))},b.deleteUserSong=function(a,c){console.log("Delete User Song",a,c);var d=b.user.musics.indexOf(a);-1!=d&&b.user.musics.splice(d,1),console.log(b.user)},b.resetForm=function(){b.user.username="",b.user.email="",b.user.pk=-1,b.user.musics=[],b.selectedSong=b.musics[0].pk},d(),e()}]),angular.module("MusicDatabaseApp").service("APIData",["$http","$q",function(a,b){return{getMusics:function(){return a.get(apiUrl+"/musics/").then(function(a){return"object"==typeof a.data?a.data:b.reject(a.data)},function(a){return b.reject(a.data)})},getMusic:function(c){return a.get(apiUrl+"/musics/"+c+"/").then(function(a){return"object"==typeof a.data?a.data:b.reject(a.data)},function(a){return b.reject(a.data)})},createMusic:function(c){return a.post(apiUrl+"/musics/",c).then(function(a){return"object"==typeof a.data?a.data:b.reject(a.data)},function(a){return b.reject(a.data)})},updateMusic:function(c){return a.put(apiUrl+"/musics/"+c.pk+"/",c).then(function(a){return"object"==typeof a.data?a.data:b.reject(a.data)},function(a){return b.reject(a.data)})},deleteMusic:function(c){return a["delete"](apiUrl+"/musics/"+c+"/").then(function(a){return 204===a.status?!0:b.reject(a.data)},function(a){return b.reject(a.data)})},getUsers:function(){return a.get(apiUrl+"/users/").then(function(a){return"object"==typeof a.data?a.data:b.reject(a.data)},function(a){return b.reject(a.data)})},getUser:function(c){return a.get(apiUrl+"/users/"+c+"/").then(function(a){return"object"==typeof a.data?a.data:b.reject(a.data)},function(a){return b.reject(a.data)})},createUser:function(c){return a.post(apiUrl+"/users/",c).then(function(a){return"object"==typeof a.data?a.data:b.reject(a.data)},function(a){return b.reject(a.data)})},updateUser:function(c){return a.put(apiUrl+"/users/"+c.pk+"/",c).then(function(a){return"object"==typeof a.data?a.data:b.reject(a.data)},function(a){return b.reject(a.data)})},deleteUser:function(c){return a["delete"](apiUrl+"/users/"+c+"/").then(function(a){return 204===a.status?!0:b.reject(a.data)},function(a){return b.reject(a.data)})},populate:function(){return a.get(apiUrl+"/populate/").then(function(a){return"object"==typeof a.data?a.data.status:b.reject(a.data)},function(a){return b.reject(a.data)})}}}]),angular.module("MusicDatabaseApp").filter("MusicFilter",function(){return function(a,b){var c=[];if(console.log(b),b.length>0)for(var d=0;d<a.length;d++){var e=a[d];-1!=b.indexOf(e.pk)&&c.push(e)}return c}}),angular.module("MusicDatabaseApp").filter("ArtistUniqueFilter",function(){return function(a){for(var b=[],c=[],d=0;d<a.length;d++){var e=a[d];b.search(e.artist)||(b.push(e.artist),c.push(e))}return c}}),angular.module("MusicDatabaseApp").filter("MusicSelectionFilter",function(){return function(a,b){var c=[];if(console.log(b),b.length>0)for(var d=0;d<a.length;d++){var e=a[d];-1==b.indexOf(e.pk)&&c.push(e)}else c=a;return c}}),angular.module("MusicDatabaseApp").controller("MusicsCtrl",["APIData","$scope","$anchorScroll",function(a,b,c){function d(){a.getMusics().then(function(a){b.musics=a},function(a){console.log(a)})}b.musics=[],b.music={pk:null,album:"",track:"",artist:""},b.musicToDelete=null,b.submitForm=function(c){b.music=c,null==c.pk||void 0==c.pk||-1==c.pk?a.createMusic({album:c.album,track:c.track,artist:c.artist,track_id:0}).then(function(a){d(),b.resetForm()},function(a){console.log(a)}):a.updateMusic({album:c.album,track:c.track,artist:c.artist,pk:c.pk}).then(function(a){d(),b.resetForm()},function(a){console.log(a)})},b.editMusic=function(d){c(),a.getMusic(d.pk).then(function(a){b.music=a},function(a){console.log(a)})},b.deleteMusic=function(c){a.deleteMusic(c.pk).then(function(a){d(),b.resetForm()},function(a){console.log(a)})},b.prepareMusicDeletion=function(a){b.musicToDelete=a},b.populate=function(){b.musics=[],a.populate().then(function(a){d()},function(a){console.log(a)})},b.resetForm=function(){b.music.artist="",b.music.album="",b.music.pk=-1,b.music.track=""},d()}]),angular.module("MusicDatabaseApp").service("routeNavigation",["$route","$location",function(a,b){var c=[];return angular.forEach(a.routes,function(a,b){a.name&&c.push({path:b,name:a.name})}),{routes:c,activeRoute:function(a){return a.path===b.path()}}}]),angular.module("MusicDatabaseApp").directive("navigation",["routeNavigation",function(a){return{restrict:"E",replace:!0,templateUrl:"views/navigation.html",controller:["$scope",function(b){b.routes=a.routes,b.activeRoute=a.activeRoute}]}}]),angular.module("websitedevApp").run(["$templateCache",function(a){a.put("views/musics.html",'<div class="row"> <div class="col-lg-8 col-md-6 col-sm-12 col-xs-12"> <div class="panel panel-default"> <div class="panel-heading">Musics</div> <div class="panel-body"> <div class="table-responsive"> <table class="table"> <thead> <tr> <th>Artist</th> <th>Album</th> <th>Track</th> <th class="options">Options</th> </tr> </thead> <tbody> <tr data-ng-repeat="item in musics"> <td>{{ item.artist }}</td> <td>{{ item.album }}</td> <td>{{ item.track }}</td> <td> <button type="button" class="btn btn-primary btn-xs" data-ng-click="editMusic(item)"><span class="glyphicon glyphicon-pencil"></span> Edit</button> <button type="button" class="btn btn-danger btn-xs" data-ng-click="prepareMusicDeletion(item)" data-toggle="modal" data-target="#myModalA"><span class="glyphicon glyphicon-trash"></span> Delete</button> </td> </tr> </tbody> </table> </div> </div> </div> </div> <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12"> <div class="panel panel-default"> <div class="panel-heading">Music Details</div> <div class="panel-body"> <form novalidate> <div class="form-group"> <label for="artist">Artist</label> <input type="text" name="artist" class="form-control" id="artist" data-ng-model="music.artist" placeholder="Artist"> </div> <div class="form-group"> <label for="album">Album</label> <input type="text" name="album" class="form-control" id="album" data-ng-model="music.album" placeholder="Album"> </div> <div class="form-group"> <label for="track">Track</label> <input type="text" name="track" class="form-control" id="track" data-ng-model="music.track" placeholder="Track"> </div> <input type="hidden" name="pk" id="pk" data-ng-model="music.pk"> <div class="row"> <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"> <button type="submit" data-ng-click="submitForm(music)" class="btn btn-primary">Save</button> <button type="button" data-ng-click="resetForm()" class="btn btn-danger">Cancel</button> </div> </div> </form> </div> </div> <div class="panel panel-default"> <div class="panel-heading">Populate</div> <div class="panel-body"> <div class="form-group"> <label for="populateBtn">Get Data From http://freemusicarchive.org</label><br> <button id="populateBtn" type="button" data-ng-click="populate()" class="btn btn-primary btn-lg">Execute</button> </div> </div> </div> </div> </div> <!-- Modal --> <div class="modal fade" id="myModalA" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"> <div class="modal-dialog" role="document"> <div class="modal-content"> <div class="modal-header"> <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button> <h4 class="modal-title" id="myModalLabel">Delete Music</h4> </div> <div class="modal-body"> <p>Do you really wish to delete this Music?</p> </div> <div class="modal-footer"> <button type="button" class="btn btn-danger" data-ng-click="deleteMusic(musicToDelete)" data-dismiss="modal">Delete</button> <button type="button" class="btn btn-primary" data-dismiss="modal">Cancel</button> </div> </div> </div> </div>'),a.put("views/navigation.html",'<nav class="navbar navbar-inverse navbar-fixed-top" role="navigation"> <div class="navbar-header"> <button type="button" class="navbar-toggle collapsed" ng-click="showMobileNav = !showMobileNav"> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> <a class="navbar-brand" href="#">Music Database</a> </div> <div class="collapse navbar-collapse" ng-class="{in: showMobileNav}"> <ul class="nav navbar-nav"> <li ng-repeat="route in routes" ng-class="{active: activeRoute(route)}"> <a href="#{{ route.path }}">{{ route.name }}</a> </li> </ul> </div> </nav>'),a.put("views/userDetails.html",'<div class="row"> <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"> </div> </div>'),a.put("views/users.html",'<div class="row"> <div class="col-lg-8 col-md-6 col-sm-12 col-xs-12"> <div class="panel panel-default"> <div class="panel-heading">Users</div> <div class="panel-body"> <div class="table-responsive"> <table class="table"> <thead> <tr> <th>Username</th> <th>Email</th> <th>Musics</th> <th class="options">Options</th> </tr> </thead> <tbody> <tr data-ng-repeat="item in users"> <td>{{ item.username }}</td> <td>{{ item.email }}</td> <td>{{ item.musics }}</td> <td> <button type="button" class="btn btn-primary btn-xs" data-ng-click="editUser(item)"><span class="glyphicon glyphicon-pencil"></span> Edit</button> <button type="button" class="btn btn-danger btn-xs" data-ng-click="prepareUserDeletion(item)" data-toggle="modal" data-target="#myModal"><span class="glyphicon glyphicon-trash"></span> Delete</button> </td> </tr> </tbody> </table> </div> </div> </div> </div> <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12"> <div class="panel panel-default"> <div class="panel-heading">User Details</div> <div class="panel-body"> <form novalidate> <div class="form-group"> <label for="username">Username</label> <input type="text" name="username" class="form-control" id="username" data-ng-model="user.username" placeholder="Username"> </div> <div class="form-group"> <label for="email">Email</label> <input type="email" class="form-control" id="email" data-ng-model="user.email" placeholder="Email"> </div> <div class="panel panel-default"> <div class="panel-heading">Musics</div> <div class="panel-body"> <div class="row"> <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"> <div class="table-responsive"> <table class="table"> <thead> <tr> <th>Artist</th> <th>Album</th> <th>Track</th> <th>Options</th> </tr> </thead> <tbody> <tr data-ng-repeat="item in musics | MusicFilter:user.musics"> <td>{{ item.artist }}</td> <td>{{ item.album }}</td> <td>{{ item.track }}</td> <td> <button type="button" class="btn btn-danger btn-xs" data-ng-click="deleteUserSong(item.pk,user)"><span class="glyphicon glyphicon-trash"></span> Delete</button> </td> </tr> </tbody> </table> </div> </div> </div> <div class="row"> <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"> <h6> Add Song</h6> </div> <div class="col-lg-10 col-md-10 col-sm-10 col-xs-10"> <select name="song" id="song" class="form-control" data-ng-model="selectedSong"> <option data-ng-repeat="item in musics | MusicSelectionFilter:user.musics" value="{{ item.pk }}" ng-selected="{{ item.pk == selecetdSong }}">{{ (item.artist + \' - \' + item.track + \'( \' + item.album + \' )\') }}</option> </select> </div> <div class="col-lg-2 col-md-2 col-sm-2 col-xs-2"> <button type="button" data-ng-click="addSong(selectedSong)" class="btn btn-primary"><span class="glyphicon glyphicon-plus"></span></button> </div> </div> </div> </div> <input type="hidden" name="pk" id="pk" data-ng-model="user.pk"> <input type="hidden" name="musics" id="musics" data-ng-model="user.musics"> <div class="row"> <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"> <button type="submit" data-ng-click="submitForm(user)" class="btn btn-primary">Save</button> <button type="button" data-ng-click="resetForm()" class="btn btn-danger">Cancel</button> </div> </div> </form> </div> </div> </div> </div> <!-- Modal --> <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"> <div class="modal-dialog" role="document"> <div class="modal-content"> <div class="modal-header"> <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button> <h4 class="modal-title" id="myModalLabel">Modal title</h4> </div> <div class="modal-body"> ... </div> <div class="modal-footer"> <button type="button" class="btn btn-danger" data-ng-click="deleteUser(userToDelete)" data-dismiss="modal">Delete</button> <button type="button" class="btn btn-primary" data-dismiss="modal">Cancel</button> </div> </div> </div> </div>')}]);